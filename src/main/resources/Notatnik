1. Tworzymy obiekt Game -> Tworzy Board

2.Board tworzy rzędy i kolumny, na takich pozycjach tworzymy obiekty Pawn (przypisujemy im kolor)

3.Pierwszy ruch ma biały (ruch(czy można), zbicie(czy można),
    zostać królową(czy jest na odpowiedznim miejscu), error(brak ruchu)), sprawdzenie czy biały wygrał czy jest remis

4.Ruch ma czarny (ruch(czy można), zbicie(czy można),zostać królową(czy jest na odpowiedznim miejscu),
     error(brak ruchu)), sprawdzenie czy czarny wygrał czy jest remis

5.Loop pkt.3 i 4

6.Zakończenie gry

########################
pytanie ad. 3 & 4: zostawiamy tak, czy zastępujemy:
GRACZ ma RUCH ............. sprawdzenie i zmień GRACZ (1>2>1>...)
(chodzi o scalenie 2 punktów flow w 1 uniwersalny)



Rzeczy do zrobienia:
Bug w walidacji coordinatesInRange - wybija 0 --   gotowe
CheckForWinner - nie bierze pod uwage krolowki --  gotowe
Remis w sytuacji krol vs krol                  --   gotowe
Poprawa wydruku boarda(kiedy jest królówka na rogu, nie resetuje się kod ANSI) == gotowe
Refactor metody verifyPlayerMove  --               gotowe
Board jest singletonem  --                         gotowe

Kilka przeskokow pod rzad                   --     gotowe
Przeniesienie displayBoarda do Game
Dodac wymuszenie zbijania przy pierwszym ruchu

Multicapture:
*Bez obowiązku bicia

-Czy bicie jest możliwe dla start-lądowanie dla pionka którym się ruszasz.
(4 kierunki)
-Po zbiciu sprawdza (po usunięciu poprzedniego) sprawdź czy mozesz dalej zbić.
Jeżeli true(zwróć ENUM z docelowych pozycji obecnego pionka) - pytaj gdzie dalej zbić.

*Obowiązek bicia

-Dodatnie treści o validacji zbicia przez gracza